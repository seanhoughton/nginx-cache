user  nginx;
worker_processes  ${WORKERS};

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  ${MAX_EVENTS};
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    vhost_traffic_status_zone;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"'
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log  /var/log/nginx/access.log  upstream_time;
    ${ACCESS_LOG_STATEMENT}

    sendfile   ${SENDFILE};
    tcp_nopush ${TCP_NOPUSH};

    keepalive_timeout  65;

    proxy_cache_key $scheme$host$request_uri;
    proxy_cache_path /cache keys_zone=one:${CACHE_MEM} levels=1:2 inactive=${CACHE_AGE} max_size=${CACHE_SIZE} use_temp_path=off;
    proxy_cache_revalidate on;
    proxy_cache_methods GET HEAD;
    proxy_cache_valid 200 206        ${CACHE_AGE};
    proxy_cache_valid 301 302 303    1h;
    #proxy_cache_valid any            1s;

    upstream upstream_to_proxy {
${UPSTREAM_SERVERS}
    }

    server {
        listen                ${LISTENPORT};
        ssl                   ${SSL};
        ssl_certificate       ${CERTIFICATE};
        ssl_certificate_key   ${CERTIFICATE_KEY};

        client_max_body_size  0;
        proxy_read_timeout    300;
        proxy_send_timeout    300;
        #proxy_set_header      Host $host;
        proxy_set_header      X-Real-IP $remote_addr;
        proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header      X-Forwarded-Proto $scheme;
        port_in_redirect      off;

        add_header X-Cache-Status $upstream_cache_status;

        location /status {
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
        }

        location / {
            proxy_pass http://upstream_to_proxy;
            proxy_cache one;

            proxy_cache_lock ${PROXY_CACHE_LOCK};

            ${CUSTOM_CONFIGURATION}
        }
    }
}
